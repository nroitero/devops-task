# check if ssl files exist otherwise will force regeneration
- name: Check if /etc/letsencrypt/live/{{domain}}/privkey.pem exists
  stat:
    path: /etc/letsencrypt/live/{{domain}}/privkey.pem
  register: stat_privkey
- name: Check if /etc/letsencrypt/live/{{domain}}/fullchain.pem  exists
  stat:
    path: /etc/letsencrypt/live/{{domain}}/fullchain.pem
  register: stat_fullchain

- name: remove packages to force ssl generation
  apt:
    name: "{{item}}"
    state: absent
  with_items:
    - nginx
    - nginx-common
    - nginx-full
    - letsencrypt
  when: stat_fullchain.stat.exists == False or  stat_privkey.stat.exists == False


- name: generate nginx default conf
  shell: dpkg --force-confmiss -i /var/cache/apt/archives/nginx-common_*.deb
  when: stat_fullchain.stat.exists == False or  stat_privkey.stat.exists == False






- name: generate nginx configuration with ssl
  set_fact:
    nginx_vhosts:
      - listen: "443 ssl"

        server_name: "{{domain}}"
        filename: "{{domain}}.conf"
        extra_parameters: |
          ssl_certificate     /etc/letsencrypt/live/{{domain}}/fullchain.pem;
          ssl_certificate_key /etc/letsencrypt/live/{{domain}}/privkey.pem;
          ssl_protocols       TLSv1.1 TLSv1.2;
          ssl_ciphers         HIGH:!aNULL:!MD5;
          location / {
          proxy_set_header Host $host;
          proxy_pass  http://upstream;
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection 'upgrade';
          proxy_cache_bypass $http_upgrade;
          proxy_set_header X-Forwarded-For $remote_addr;
          {{allowed| join('
          ')}}
          deny    all;
          }
      - listen: "80"

        server_name: "{{domain}}"
        filename: "{{domain}}_80.conf"
        extra_parameters: |
            return 301 https://$server_name$request_uri;